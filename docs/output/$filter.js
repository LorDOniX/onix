Ext.data.JsonP.$filter({"tagname":"class","name":"$filter","autodetected":{},"files":[{"filename":"filter.js","href":"filter.html#$filter"}],"members":[{"name":"","tagname":"method","owner":"$filter","id":"method-","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-S-filter","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/filter.html#$filter' target='_blank'>filter.js</a></div></pre><div class='doc-contents'><p>Filter process input data and output can be used in template or in the code</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='$filter'>$filter</span><br/><a href='source/filter.html#$filter-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/$filter-method-' class='name expandable'></a>( <span class='pre'>filterName</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Return filter by his name or returns empty filter. ...</div><div class='long'><p>Return filter by his name or returns empty filter. Filter name is\nconcatenation of $filter + Filter name</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>filterName</span> : String<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});